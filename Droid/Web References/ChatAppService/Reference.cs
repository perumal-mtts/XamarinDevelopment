//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18444.
// 
#pragma warning disable 1591

namespace ChatApp.Droid.ChatAppService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="UserServiceSoap", Namespace="http://10.97.75.50/ChatService/UserService.asmx")]
    public partial class UserService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendFriendRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApproveFriendRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetValidUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMyRequestsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public UserService() {
            this.Url = "http://10.97.75.50/ChatService/UserService.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetUsersCompletedEventHandler GetUsersCompleted;
        
        /// <remarks/>
        public event CreateUserCompletedEventHandler CreateUserCompleted;
        
        /// <remarks/>
        public event EditUserCompletedEventHandler EditUserCompleted;
        
        /// <remarks/>
        public event DeleteUserCompletedEventHandler DeleteUserCompleted;
        
        /// <remarks/>
        public event SendFriendRequestCompletedEventHandler SendFriendRequestCompleted;
        
        /// <remarks/>
        public event ApproveFriendRequestCompletedEventHandler ApproveFriendRequestCompleted;
        
        /// <remarks/>
        public event GetValidUserCompletedEventHandler GetValidUserCompleted;
        
        /// <remarks/>
        public event GetMyRequestsCompletedEventHandler GetMyRequestsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://10.97.75.50/ChatService/UserService.asmx/GetUsers", RequestNamespace="http://10.97.75.50/ChatService/UserService.asmx", ResponseNamespace="http://10.97.75.50/ChatService/UserService.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public User[] GetUsers() {
            object[] results = this.Invoke("GetUsers", new object[0]);
            return ((User[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUsers(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUsers", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public User[] EndGetUsers(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((User[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUsersAsync() {
            this.GetUsersAsync(null);
        }
        
        /// <remarks/>
        public void GetUsersAsync(object userState) {
            if ((this.GetUsersOperationCompleted == null)) {
                this.GetUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUsersOperationCompleted);
            }
            this.InvokeAsync("GetUsers", new object[0], this.GetUsersOperationCompleted, userState);
        }
        
        private void OnGetUsersOperationCompleted(object arg) {
            if ((this.GetUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUsersCompleted(this, new GetUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://10.97.75.50/ChatService/UserService.asmx/CreateUser", RequestNamespace="http://10.97.75.50/ChatService/UserService.asmx", ResponseNamespace="http://10.97.75.50/ChatService/UserService.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateUser(User item) {
            this.Invoke("CreateUser", new object[] {
                        item});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateUser(User item, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateUser", new object[] {
                        item}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndCreateUser(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void CreateUserAsync(User item) {
            this.CreateUserAsync(item, null);
        }
        
        /// <remarks/>
        public void CreateUserAsync(User item, object userState) {
            if ((this.CreateUserOperationCompleted == null)) {
                this.CreateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateUserOperationCompleted);
            }
            this.InvokeAsync("CreateUser", new object[] {
                        item}, this.CreateUserOperationCompleted, userState);
        }
        
        private void OnCreateUserOperationCompleted(object arg) {
            if ((this.CreateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://10.97.75.50/ChatService/UserService.asmx/EditUser", RequestNamespace="http://10.97.75.50/ChatService/UserService.asmx", ResponseNamespace="http://10.97.75.50/ChatService/UserService.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EditUser(User item) {
            this.Invoke("EditUser", new object[] {
                        item});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginEditUser(User item, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("EditUser", new object[] {
                        item}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndEditUser(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void EditUserAsync(User item) {
            this.EditUserAsync(item, null);
        }
        
        /// <remarks/>
        public void EditUserAsync(User item, object userState) {
            if ((this.EditUserOperationCompleted == null)) {
                this.EditUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditUserOperationCompleted);
            }
            this.InvokeAsync("EditUser", new object[] {
                        item}, this.EditUserOperationCompleted, userState);
        }
        
        private void OnEditUserOperationCompleted(object arg) {
            if ((this.EditUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://10.97.75.50/ChatService/UserService.asmx/DeleteUser", RequestNamespace="http://10.97.75.50/ChatService/UserService.asmx", ResponseNamespace="http://10.97.75.50/ChatService/UserService.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteUser(string id) {
            this.Invoke("DeleteUser", new object[] {
                        id});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteUser(string id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteUser", new object[] {
                        id}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDeleteUser(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void DeleteUserAsync(string id) {
            this.DeleteUserAsync(id, null);
        }
        
        /// <remarks/>
        public void DeleteUserAsync(string id, object userState) {
            if ((this.DeleteUserOperationCompleted == null)) {
                this.DeleteUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteUserOperationCompleted);
            }
            this.InvokeAsync("DeleteUser", new object[] {
                        id}, this.DeleteUserOperationCompleted, userState);
        }
        
        private void OnDeleteUserOperationCompleted(object arg) {
            if ((this.DeleteUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://10.97.75.50/ChatService/UserService.asmx/SendFriendRequest", RequestNamespace="http://10.97.75.50/ChatService/UserService.asmx", ResponseNamespace="http://10.97.75.50/ChatService/UserService.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendFriendRequest(FriendRequest request) {
            this.Invoke("SendFriendRequest", new object[] {
                        request});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSendFriendRequest(FriendRequest request, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SendFriendRequest", new object[] {
                        request}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSendFriendRequest(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void SendFriendRequestAsync(FriendRequest request) {
            this.SendFriendRequestAsync(request, null);
        }
        
        /// <remarks/>
        public void SendFriendRequestAsync(FriendRequest request, object userState) {
            if ((this.SendFriendRequestOperationCompleted == null)) {
                this.SendFriendRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendFriendRequestOperationCompleted);
            }
            this.InvokeAsync("SendFriendRequest", new object[] {
                        request}, this.SendFriendRequestOperationCompleted, userState);
        }
        
        private void OnSendFriendRequestOperationCompleted(object arg) {
            if ((this.SendFriendRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendFriendRequestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://10.97.75.50/ChatService/UserService.asmx/ApproveFriendRequest", RequestNamespace="http://10.97.75.50/ChatService/UserService.asmx", ResponseNamespace="http://10.97.75.50/ChatService/UserService.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ApproveFriendRequest(FriendRequest request) {
            this.Invoke("ApproveFriendRequest", new object[] {
                        request});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginApproveFriendRequest(FriendRequest request, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ApproveFriendRequest", new object[] {
                        request}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndApproveFriendRequest(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void ApproveFriendRequestAsync(FriendRequest request) {
            this.ApproveFriendRequestAsync(request, null);
        }
        
        /// <remarks/>
        public void ApproveFriendRequestAsync(FriendRequest request, object userState) {
            if ((this.ApproveFriendRequestOperationCompleted == null)) {
                this.ApproveFriendRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApproveFriendRequestOperationCompleted);
            }
            this.InvokeAsync("ApproveFriendRequest", new object[] {
                        request}, this.ApproveFriendRequestOperationCompleted, userState);
        }
        
        private void OnApproveFriendRequestOperationCompleted(object arg) {
            if ((this.ApproveFriendRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApproveFriendRequestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://10.97.75.50/ChatService/UserService.asmx/GetValidUser", RequestNamespace="http://10.97.75.50/ChatService/UserService.asmx", ResponseNamespace="http://10.97.75.50/ChatService/UserService.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public User GetValidUser(User user) {
            object[] results = this.Invoke("GetValidUser", new object[] {
                        user});
            return ((User)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetValidUser(User user, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetValidUser", new object[] {
                        user}, callback, asyncState);
        }
        
        /// <remarks/>
        public User EndGetValidUser(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((User)(results[0]));
        }
        
        /// <remarks/>
        public void GetValidUserAsync(User user) {
            this.GetValidUserAsync(user, null);
        }
        
        /// <remarks/>
        public void GetValidUserAsync(User user, object userState) {
            if ((this.GetValidUserOperationCompleted == null)) {
                this.GetValidUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetValidUserOperationCompleted);
            }
            this.InvokeAsync("GetValidUser", new object[] {
                        user}, this.GetValidUserOperationCompleted, userState);
        }
        
        private void OnGetValidUserOperationCompleted(object arg) {
            if ((this.GetValidUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetValidUserCompleted(this, new GetValidUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://10.97.75.50/ChatService/UserService.asmx/GetMyRequests", RequestNamespace="http://10.97.75.50/ChatService/UserService.asmx", ResponseNamespace="http://10.97.75.50/ChatService/UserService.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public User[] GetMyRequests(string fromUserId) {
            object[] results = this.Invoke("GetMyRequests", new object[] {
                        fromUserId});
            return ((User[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMyRequests(string fromUserId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMyRequests", new object[] {
                        fromUserId}, callback, asyncState);
        }
        
        /// <remarks/>
        public User[] EndGetMyRequests(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((User[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMyRequestsAsync(string fromUserId) {
            this.GetMyRequestsAsync(fromUserId, null);
        }
        
        /// <remarks/>
        public void GetMyRequestsAsync(string fromUserId, object userState) {
            if ((this.GetMyRequestsOperationCompleted == null)) {
                this.GetMyRequestsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMyRequestsOperationCompleted);
            }
            this.InvokeAsync("GetMyRequests", new object[] {
                        fromUserId}, this.GetMyRequestsOperationCompleted, userState);
        }
        
        private void OnGetMyRequestsOperationCompleted(object arg) {
            if ((this.GetMyRequestsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMyRequestsCompleted(this, new GetMyRequestsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://10.97.75.50/ChatService/UserService.asmx")]
    public partial class User {
        
        private string idField;
        
        private string nameField;
        
        private string emailIdField;
        
        private string passwordField;
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string EmailId {
            get {
                return this.emailIdField;
            }
            set {
                this.emailIdField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://10.97.75.50/ChatService/UserService.asmx")]
    public partial class FriendRequest {
        
        private string fromUserIdField;
        
        private string toUserIdField;
        
        private FriendRequestStatus statusField;
        
        /// <remarks/>
        public string FromUserId {
            get {
                return this.fromUserIdField;
            }
            set {
                this.fromUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string ToUserId {
            get {
                return this.toUserIdField;
            }
            set {
                this.toUserIdField = value;
            }
        }
        
        /// <remarks/>
        public FriendRequestStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://10.97.75.50/ChatService/UserService.asmx")]
    public enum FriendRequestStatus {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Approved,
        
        /// <remarks/>
        Rejected,
        
        /// <remarks/>
        PendingAction,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetUsersCompletedEventHandler(object sender, GetUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CreateUserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void EditUserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteUserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SendFriendRequestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ApproveFriendRequestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetValidUserCompletedEventHandler(object sender, GetValidUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetValidUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetValidUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetMyRequestsCompletedEventHandler(object sender, GetMyRequestsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMyRequestsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMyRequestsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591